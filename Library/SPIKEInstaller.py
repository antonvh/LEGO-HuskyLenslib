import ubinascii, uos, machine,uhashlib
from ubinascii import hexlify
b64="""TQUCHyCLCOgQTgAHHHB5aHVza3lsZW5zLnB5OSgwOVBlJUWAHR8fHytmJCQkJCQkJCREJCRkIIsUixKLqgCAEBBzbGVlcF9tcxAQdGlja3NfbXMqAhsIdGltZRwFFgEcBRYBWYBRGwxzdHJ1Y3QWAYAQAEgqARsAcxwASBYASFmAEAphdGFuMhAOZGVncmVlcyoCGwhtYXRoHAUWARwFFgFZgBAIcG9ydCoBGwZodWIcAxYBWTICFghieXRlIwAWDEhFQURFUiMBFgxGQUlMRUQyAxEAfKAiPjQCNAEwHhYOUkVRVUVTVBYcUkVRVUVTVF9CTE9DS1MWHFJFUVVFU1RfQVJST1dTFh5SRVFVRVNUX0xFQVJORUQWLFJFUVVFU1RfQkxPQ0tTX0xFQVJORUQWLFJFUVVFU1RfQVJST1dTX0xFQVJORUQWGlJFUVVFU1RfQllfSUQWKFJFUVVFU1RfQkxPQ0tTX0JZX0lEFihSRVFVRVNUX0FSUk9XU19CWV9JRBYWUkVUVVJOX0lORk8WGFJFVFVSTl9CTE9DSxYYUkVUVVJOX0FSUk9XFhpSRVFVRVNUX0tOT0NLFiJSRVFVRVNUX0FMR09SSVRITRYSUkVUVVJOX09LFiZSRVFVRVNUX0NVU1RPTU5BTUVTFhpSRVFVRVNUX1BIT1RPFiRSRVFVRVNUX1NFTkRfUEhPVE8WLlJFUVVFU1RfU0VORF9LTk9XTEVER0VTFjRSRVFVRVNUX1JFQ0VJVkVfS05PV0xFREdFUxYmUkVRVUVTVF9DVVNUT01fVEVYVBYkUkVRVUVTVF9DTEVBUl9URVhUFhpSRVFVRVNUX0xFQVJOFhxSRVFVRVNUX0ZPUkdFVBYuUkVRVUVTVF9TRU5EX1NDUkVFTlNIT1QWLlJFUVVFU1RfU0FWRV9TQ1JFRU5TSE9UFjxSRVFVRVNUX0xPQURfQUlfRlJBTUVfRlJPTV9VU0IWHFJFUVVFU1RfSVNfUFJPFjBSRVFVRVNUX0ZJUk1XQVJFX1ZFUlNJT04WFlJFVFVSTl9CVVNZEQUWGlJFVFVSTl9JU19QUk+AFjRBTEdPUklUSE1fRkFDRV9SRUNPR05JVElPToEWMkFMR09SSVRITV9PQkpFQ1RfVFJBQ0tJTkeCFjhBTEdPUklUSE1fT0JKRUNUX1JFQ09HTklUSU9OgxYu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
"""

def calc_hash(b):
    return hexlify(uhashlib.sha256(b).digest()).decode()

# this is the hash of the compiled mpy
hash_gen='8bb8f02625c681f289f0d645a2c9d0e74a7a9f95a0e7b0304f907462b5f5d39f'

pyhuskylens=ubinascii.a2b_base64(b64)
hash_initial=calc_hash(pyhuskylens)

try: # remove any old versions of pyhuskylens library
    uos.remove('/projects/pyhuskylens.py')
    uos.remove('/projects/pyhuskylens.mpy')
except OSError:
    pass

print('writing pyhuskylens.mpy to folder /projects')
with open('/projects/pyhuskylens.mpy','wb') as f:
    f.write(pyhuskylens)
print('Finished writing pyhuskylens.mpy.')
print('Checking hash.')
pyhuskylens_check=open('/projects/pyhuskylens.mpy','rb').read()
hash_check=calc_hash(pyhuskylens_check)

print('Hash generated: ',hash_gen)
error=False
if hash_initial != hash_gen:
    print('Failed hash of base64 input : '+hash_initial)
    error=True
if hash_check != hash_gen:
    print('Failed hash of .mpy on SPIKE: '+hash_check)
    error=True

if not error:
    print('pyhuskylens library written succesfully. Resetting....')
    machine.reset()
else:
    print('Failure in pyhuskylens library!')

